filebeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml
    reload.enabled: true

filebeat.modules:    
  - module: elasticsearch
    server:
     enabled: true

setup.kibana:
  host: "kibana:5601"    

setup.ilm:
  enabled: false
  rollover_alias: "paddle-planner-"
  pattern: "{now/d}-000001"
  overwrite: true

setup.template:
  name: "paddle-planner"
  pattern: "paddle-planner-*"
  enabled: true
  overwrite: true
  fields: "/usr/share/filebeat/fields.yml"


filebeat.inputs:
  - type: log
    enabled: true
    paths:   
      - ${LOG_DIR}/${BUOY_LOG_FILE}
    json.keys_under_root: false
    tags: ['buoy']
    processors:
    - decode_json_fields:
        fields: ["message"]
        target: buoy_report
    - convert:
        fields:
           - {from: "json.message.reportDate", to: "report_date", mode: "rename"}
           - {from: "json.message.reportTime", to: "report_time", mode: "rename"}
           - {from: "json.message.windGust", to: "wind_gust", type: "integer", mode: "rename"}
           - {from: "json.message.period", to: "period", type: "double"}
           - {from: "json.message.created_at", to: "created_at", type: "string", mode: "rename"}
           - {from: "json.message.dewPoint", to: "dew_point", type: "double", mode: "rename"}
           - {from: "json.message.height", to: "height", type: "double", mode: "rename"}
           - {from: "json.message.humidity", to: "humidity", type: "integer", mode: "rename"}
           - {from: "json.message.ID", to: "buoy_id" , type: "string", mode: "rename"}
           - {from: "json.message.name", to: "name" , type: "string", mode: "rename"}
           - {from: "json.message.pressure", to: "pressure", type: "double", mode: "rename"}
           - {from: "json.message.seaTemp", to: "sea_temp", type: "double", mode: "rename"}
           - {from: "json.message.temp", to: "temp", type: "double", mode: "rename"}
           - {from: "json.message.time", to: "time" , type: "string", mode: "rename"}
           - {from: "json.message.updated_At", to: "updated_at" , type: "string", mode: "rename"} 
           - {from: "json.message.windDir", to: "wind_dir", type: "double", mode: "rename"}
           - {from: "json.message.windSpeed", to: "wind_speed", type: "double", mode: "rename"}
           - {from: "json.message.wmoID", to: "wmo_id" , type: "string", mode: "rename"}
        ignore_missing: false
        fail_on_error: false
    - script:
        lang: javascript
        id: my_filter_buoy
        source: >
          function process(event) {
            var timearray  = event.Get("report_date").split("-", 3);
            var elasticTime = timearray[2] +"-"+ timearray[1] +"-"+ timearray[0];
            var reportHour = event.Get("report_time");
            if(reportHour.charAt(0) == ' ')
              reportHour="0"+reportHour.trim();
            event.Put("report_date", elasticTime + "T" + reportHour + ":00");
            event.Tag("time-modified");
          }
    - drop_fields:
        fields: ["json"]
  - type: log
    enabled: true
    paths:   
      - ${LOG_DIR}/${WEATHER_LOG_FILE}
    tags: ['weather-forecast']
    processors:
    - decode_json_fields:
        fields: ["message"]
    - script:
        lang: javascript
        id: add-date-weather
        source: >
          function process(e){
            var _date  = e.Get("json.message.dt_txt").split(" ",2)
            e.Put("report_date", _date[0]+'T'+_date[1])
            e.Tag("time-modified");
          }
  - type: log
    enabled: true
    paths:   
      - ${LOG_DIR}/${TIDE_LOG_FILE}
    tags: ['tide-forecast']
    processors:
        fields: ["message"]
    - convert:
           - {from: "json.message.date", to: "report_date", mode: "rename"}
           - {from: "json.message.height", to: "height", mode: "rename"}
           - {from: "json.message.data.requestLat", to: "response_lat", mode: "rename"}
            e.Tag("time-modified");
          }
          
        
          
output.elasticsearch:
  hosts: '${ELASTICSEARCH_HOSTS:elasticsearch:9200}'
  index: "paddle-planner-%{[agent.version]}-%{+yyyy.MM.dd}"
  console:
    pretty: true

logging.level: debug
logging.selectors: "*"

